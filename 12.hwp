액티브 X 컨트롤 공격
- 액티브 x 컨트롤: 
    - 실행 바이너리를 패키징하여 다른 프로그램에서 쉽게 사용할 수 있도록 객체지향적 인터페이스를 만드는 기술
    - 재사용 가능한 객체지향적인 소프트웨어 구성 요소 개발에 사용되는 기술
    - 컴포넌트 오브젝트 모델과 객체 연결 삽입을 적용해 www으로부터 다운로드 받은 컨텐츠들을 이용하는데 이용됨
- 액티브 x 컨트롤을 브라우저에 설치할 때 사용자의 수락을 받아야 하지만 한번 수락을 받으면 액티브 x 컨트롤은 모든 취약점을 포함하게 되고, 결국 사용자가 방문한 모든 악의적인 웹사이트를 악용할 수 있게 된다.
- 일반적으로 c 같은 자연 언어로 작성되었기 때문에 버퍼 오버플로우 같은 고전적인 소프트 웨어 취약점에 위험하다.
- 액티브 x 예방
    - 액티브 x 컨트롤의 설계자와 개발자는 악성 웹사이트가 그 액티브x가 실행하는 메소드를 호출할 수 없게 제작해야 한다.
        - 컨트롤은 원천적인 위험을 내포하고 있는 메소드를 노출시키지 말아야 한다.
    - 컨트롤이 호출되는 HTML페이지를 발행한 도메인명을 검사한다.


로컬 프라이버시 공격
- 많은 사용자들이 웹 애플리케이션에 접근할 때 공격자와 사용자가 같은 컴퓨터에 직접 접근할 수 있게 웹 애플리케이션 환경이 공유되는 경우가 있다.
- 이런 공유 환경은 취약한 애플리케이션 사용자를 공격에 노출시킨다.
- 공유 환경에 대한 공격을 몇 가지 부분에 수행할 수 있다.
- 장시간 유지되는 쿠키
    - 애플리케이션은 장기간 유지되는 쿠키에 민감한 데이터를 저장하는데, 대부분의 브라우저는 로컬 파일 시스템에 쿠키 정보를 저장한다.


* 발전된 공격 기법
Ajax 공격

안티 DNS 피닝
- 안티 DNS 피닝은 악성 웹사이트가 다른 도메인과 상호작용하는 것을 가능하게 하기 위한 목적으로 사용하며, 이는 동일 제한 정책을 부분적으로 위반한다.
- DNS: 도메인 네임 시스템, 호스트의 도메인 이름을 오스트의 네트워크 주소로 바꾸거나 그 반대의 변환을 수행할 수 있도록하기 위해 개발된 프로토콜이다.
- 가설 연역적 공격
    - 브라우저가 공격자의 도메인명을 분석할 떄 공격자의 네임서버에 DNS lookup을 수행한다.
    - 네임서버: 도메인 이름과 ip의 상호변환을 가능하게 해주는 서버, 즉 DNS를 제공하는 서버, 대부분의 도메인 이름은 2개의 네임서버를 가지게 된다
        - 두개의 네임서버가 서로 병렬적으로 동작하면서 네임서비스를 보다 안정적으로 연결되도록 함.
    - 사용자를 통해 정상 웹 서버의 데이터를 요청하는 방법
    - 주로 사용자는 접근할 수 있지만 공격자는 접근할 수 없는 애플리케이션에 이 방법을 사용해서 데이터를 획득할 수 있다. 사용자가 회사 lan상에 있다면 인트라넷에 접속할 수 있는것
    - 사용자를 앞으로 내세워서 사용자의 권한으로 컨텐츠르 수집
    - 공개 프록시: 누구나 자유롭게 접속하여 사용할 수 있는 프록시 서버, 공개 프록시를 이용하면 자신의 ip주소를 암기지 않고 익명을 ㅗ활동하기 쉽기 떄문에 크래킹, 악성 코드 등에 악용되기 쉽다.
- DNS 피닝
    -DNS 피닝: DNS 변조를 이용해 다른 도메인의 데이터에 접근하려는 공격자를 막기 위해 브라우저 세션이 지속되는 동안 동일 도메인에대해서는 브라우저가 DNS 참조 결과를 변경하지 않고 유지하는 기술, DNS의 유효기간이 지나더라도 새로운 DNS를 참조하지 않음
        - 쉽게 세션이 만료될 떄 동안 DNS의 참조 결과를 변경하지 않는 것
    - 이 방법을 악용해 가설 연역적 공격을 할 떄 사용자의 브라우저는 공격자의 ip주소를 캐시에 저장하고, 그 후에 브라우저는 DNS 참조값을 변경하지 않고 공격자의 서버와 계속 연결할 것이다.
    - 과정 
        - 사용자의 브라우저는 첫번쨰로 공격자의 ip주소에 DNS lookup을 시도
        - 공격자는 연결 시도를 거절
        - 사용자 브라우저가 다시 요청을 보내기 전에 공격자는 정상 서버에 응답
    - 후킹같은 건가? 

new thing
- 포맷 스트링 공격: 포맷스트링과 이것을 사용하는 printf()함수의 취약점을 이용하여 ret의 위체에 셀 코드의 주소를 읽어 쉘을 획득하는 해킹 공격이다.
- 셸: 운영 체제 상에서 다양한 운영 체제 기능과 서비스를 구현하는 인터페이스를 제공하는 프로그램이다.(명령 프롬프트 같은건가?)
- 퍼징 테스트: (자동화 또는 반자동화된) 소프트웨어 테스트 기법, 컴퓨터 프로그램에 유효한, 예상지 않는 또는 무작위 데이터를 입력하는 것. 이후 프로그램은 충돌이나 빙트인 코드 검증의 실패, 잠재적인 메모리 누수 발견 등과 같은 예외에 대한 감시가 이루어진다.
- ssl: 웹 서버와 브라우저간에 암호화 된 링크를 설정하기 위한 표준 보안 기술
    -서버와 클라이언트간에 전달되는 모든 데이터가 사적이고 통합되어 있는지 확인
- ajax(asynchronos jacascript and xml): 비동기적인 웹 애플리이션의 제작을 위해 사용하는 웹 개발 기법
    - 자바스트립트를 통해서 서버에 데이터를 요청하는 것(html form태그가 아니라 자바 스트립트를 통해서) -> 애플리케이션은 자바스크립트를 데이터가 아니라 코드로 해석한다.
    - asynchronos: 비동기적, 클라이언트에서 서버에 요청을 보낼 떄 요청을 보내놓고 프로그램은 계속 돌아간다는 의미, 즉 이전에 요청한 콜백 함수가 나중에 실행된다는 것
    - javascript: 웹 브라우저에 대한 스크립트 언어로 만들어진 언어, 웹 브라우저에서 출발했기 떄문에 본래 서버와 소통하는 기능은 없었으나 ajax는 가능
    - xml(extensible markup language): 데이터 형식의 일종, 확장 가능한 표시 언어
        - markup language: 데이터에 태그로 항목을 표시해준다는 것, html도 마크업 행귀지의 일종(태그르 사용하는 언어인듯)
    - 웹 서버
        - ajax는 웹 서버가 있어야만 동작한다
        - 로컬에서는 node.js를 설치해서 연습해보는 방식이 좋을 것
        - c9.io같은 웹 프레임워크 사이트에서 express 등으로 쉽게 서버를 구현해주니 그것으로 해도 편할 것
    - ajax의 본래 명칭: XHR(xml html request), 즉 HTTP request르 ㄹ서버에 보낸다는 것
    - json
        - 이것도 일종의 데이터 형태이다. xml은 자바스트립트에서 사용하기 불편하기 때문에 자바스크립트로 서버에 요청을 보낼 때 주로 json을 사용
        - json은 자바스크립트 객체, 배열 또는 둘 다를 이용해 표현된다.
    - 과정
        - 1. xmlhttp request object를 만든다.
            - 1. request를 보낼 준비를 브라우저에게 시키는 과정이다.
            - 2. 이것을 위해서 필요한 method를 갖춘 object가 필요함
        - 2. callback함수를 만든다.
            - 1. 서버에서 response가 왔을 떄 실행시키는 함수이다.
            - 2. html 페이지를 업데이트한다.
        - 3. open a request
            - 1. 여기서 브라우저에게 두 가지 정보를 넘긴다.
                - 1. 브라우저가 request를 보내기 위해 사용할 method(ex: post)
                - 2. request가 갈 url 
        - 4. send the request


- xml: 다른 언어들간에 데이터를 주고 받을 때 사용

-DNS 역방향 조회: 컴퓨터 네트워크에서 역방향 DNS 조회는 ip주소와 관련된 도메인 이름을 확인하기 위한 도메인 이름 시스템의 쿼리 기술임



- 비동기적 처리: 사용자가 서버에 요청을 할 때 페이지 전체를 리로드하지 않고 일부분만 새로고침하여 리소스 낭비를 줄이는 것
- 콜백: 다른 코드의 인수로서 넘겨주는 시행가능한 코드, 콜백을 넘겨받는 코드는 이콜백을 필요에 따라 즉시 실행할 수 있고, 나중에 실행할 수 도있다.
- xmlhttprequest: 이 객체는 서버와 상호작용하기 위해 사용된다. 전체 페이지의 새로고침없이도 url로부터 데이터를 받아올 수 있다. 웹 페이지가 사용작가 하고있는 것을 방해하지 않으면서 페이지의 일부를 업데이트 할 수있게 함

- 쿠키는 서버에서 발행되어 클라이언트의 상태 정보를 포함하고 있으며, 클라이너트 측(브라우저)에 저장된다.
- 세션: 서버에서 사용자 정보를 확인하기 위해 사용, 서버측에 보관
- 세션 ID: 서버에서 클라이언트를 구분하기 위해 발행, 서버에 접속해서 브라우저를 종료할 떄까지 인증상태 유지, 쿠키를 사용하여 클라이언트 측에서 세션ID를 저장(쿠키에 세션id가 들어있음), 클라이언트가 요청을 보낼 떄 세션id를 서버에 같이 보내고 서버는 세션 id를 통해 클라이언트를 구분

- 토큰: 유저가 로그인을 하면 클라이언트에 토큰을 발행한다. 클라이언트 측에 토큰이 저장, 클라이언트가 서버에 요청을 보낼 때 저장된 토큰을 헤더에 포함시켜 보냄, 서버는 토큰정보를 확인 후 해당 유저에게 권한을 인가, 서버에는 클라이언트 정보가 포함되어있지 않다.


question
- 액티브 x 컨트롤은 애플리케이션을 통해 설치되는 것인가?
- 액티브 x 칸트롤은 사용자 브라우저에 적용(설치) 되는 것인가 아니면 사용자 컴퓨터에 설치되는 것인가?
- 액티브 x 컨트롤을 설치하면 사용자에게 뭐가 좋은 것인가?
- 컨트롤을 스크립트롤 등록한다는게 무슨뜻인가?
- 사용자쪽에 설치된 컨트롤을 웹페이지가 호출하여 사용하는 것인가? 사용자가 사용하는게 아니라 브라우저가 사용하는것?
- 로컬 파일 시스템이 무엇인가?

- ajax는 자바스크립트에서 xml로 서버에 요청을 보내는 것인가?
- xml은 자바스크립트에서 사용하기 불편해서 자바스크립트로 서버에 요청을 보낼 때 주로 json을 사용한다고 하는데 그럼 굳이 따지자면 xml과 json은 같은 종류인것인가?
- xml과 json은 언어인가? 다른 언어들간에 데이터를 주고 받을 때 사용? -> json은 언어가 아니라 데이터를 표현하는 방식이다.
- xml과 json은 데이터를 표현하는 방식인가?



- 콜백함수는 비동기적 작업을 끝내고 다른 작업으로 넘어가기 위해 사용하는 것인가?



- Mypage 웜을 이용하여 친구추가 예제에서 스크립트로 작업되어 있는 웜은 스스로를 복제하여 다른 사용자의 프로필에 작성되는 것인가?

- 페이지별 토큰은 무엇인가? 페이지를 구분하고 페이지 정보를 담고있는 토큰인가? 서버에 저장되어있지 않고 페이지에 저장되어있는 것?


- 오프사이트 요청: 사이트 외부에서 발생한 요청을 사용할 수 있게 하는 것, 여기서 사이트는 도메인인가? 도메인 외부에서 발생한 요청을 사용하지 못하게 하는것 맞나? 여기서 요청은 데이터를 말하는 건가? 도메인도 데이터에 포함되나? 태드를 이용하여 url를 삽입하는 건 코드로 인식되기 떄문에 되는 것인가?
- 그럼 온사이트 요청도 있나? 온사이트 요청은 도메인 안에서만 요청이 이루어지는 것인가?


- dns lookup이 DNS 역방향 조회인가?
- 가설 연역적 공격이 정확히 무엇인가?
- 가설 연역적 공격
    - 사용자가 공격자의 도메인에 접속해서 데이터를 요청하면 공격자 서버는 정상 서버에 데이터를 요청한 후 그 데이터를 사용자에게 보여주는 것인가?


- ajax를 통해 데이터를 불러와 페이지를 수정
- rest api 서버 다른 언어들 간에 데이터를 교환할 수 있는 