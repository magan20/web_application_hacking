13. 맞춤 공격 자동화
- 한 애플리케이션을 효과적으로 공격하기 위해서는 애플리케이션의 동작을 이해해야 하고, 추약점을 탐색하기 위해서는 다양한 수작업과 기법을 동원해야 한다.

맞춤 자동화의 사용
    - 맞춤 자동화는 사용하는 경우
        - 식별자 수집
            - 애플리케이션에는 다양한 식별자와 이름이 사용된다. 유효한 식별자를 수집하기 위해서는 많은 식별자들을 반복해서 살펴봐야 한다.
        - 데이터 수집
        - 웹 애플리케이션 퍼징
            - 퍼징: 소프트웨어 테스트 기법을 , 컴퓨터 프로그램에 유효한, 예상치 않은 또는 무작위 데이터를 입력하는 것이다. 이후 프로그램은 충돌이나 빌트인 코드 검증의 실패, 잠재적인 메모리 누수 발견 등 같은 예외에 대한 감시가 이루어진다.
            - 애플리케이션 퍼징을 통해 비정상적인 작동을 하는 페이지가 있는지 살펴본다.

유효한 식별자 수집
    - 일반적으로 발견되는 취약점과 그 공격 방법에 대해 설명하는 과정에서 애플리케이션이 아이템을 구분하는 이름이나 식별자를 사용하고 있고, 이름이나 식별자를 발견하는 것이 공격에 필요한 경우를 본적 있다.
    - 로그인 에러메시지가 상세한 경우 유효한 사용자 목록을 만들 수 있다.
    - 어떤 특정 식별자가 유효한지 알려주는 애플리케이션의 경우, 여러 문자를 대입하여 식별자 목록을 만들고, 이를 바탕으로 식별자 목록을 애플리케이션에 대입해 각각의 식별자의 유효성을 검증할 수 있다.
    - 애플리케이션이 생성하는 토큰이 추측가능하다면 주어진 토큰을 바탕으로 가능한 모든 토큰들을 유추해내서 이를 통해 다른 사용자의 세션을 가로챌 수 있다.
    - 접근 방법
        - 요청/응답 방법으로 요청을 보내고 응답을 확인하는 방법을 사용한다.
        - 요청에는 공격하려고 하는 매개변수를 포함하고 있어야 한다.
        - 요청에 대한 서버의 응답은 매개변수의 값을 바꿈에 따라 체계적으로 달라진다.
            - 정상적인 응답 or invalid 
    - 힌트 찾기
        - 요청&응답 방법을 통해 식별자를 구별할 떄 구분 방법
        - HTTP 상태 코드
            - 200: ok
            - 301, 301: 다른 url로 리다이렉트
            - 401, 403: 허용되지 않는 요청
            - 404: 요청된 리소스를 찾을 수 없음
            - 500: 요청을 처리하는 과정에서 서버에 에러가 발생
        - 응답 길이
            - 동적으로 페이지를 구성하는 많은 애플리케이션에서 하나의 페이지 템플릿을 써서 각 응답의 템플릭에 담는형태로 구성하는 경우가 보편적이다. 요청이 유효하지 않으면 애플리케이션은 빈 템플릿으로 응답을 제시할 수도 있다.
        - 응답 본문
            - 애플리케이션이 회신한 데이터에도 이런 판별을 위한 문자열이나 패턴이 있는 경우가 보통이다.
            - 예를 들어 유효하지 않는 요청을 하면 응답에는 invalid docuemnt id라는 문자열이 있을 수 있다.
        - 위치 헤더(location)
            - 일부 애플리케이션은 특정 url에 대한 요청을 리다이텍트로 처리하는 경우 요청에 포함된 매개변수에 따라 리다이렉션 대상이 달라지는 경우가 있다.
            - 이때 HTTP 리다이렉션 대상은 위치 헤더에 명시되므로 이를 통해 유효한 요청인지 판별할 수 있다.
        - 쿠키 설정 헤더
            - 때로는 매개변수에 상관없이 애플리케이션의 응답이 똑같지만 어떤 경우에만 쿠키가 설정되는 차이만을 보이는 경우가 있다.
            - 예를 들어 모든 로그인 요청은 같은 대상을 리다이렉트되지만 유효한 로그인 정보가 입력된 경우 세션 토큰을 쿠키에 남기기 위해 애플리케이션이 쿠키를 설정하는 경우가 있다.
        - 경과 시간
            - 떄로는 매개변수값에 상관없이 응답 내용에 차이가 없는 경우 응답 시간이 아주 미묘하게 차이가 있는 경우도 있다.
            - 예를 들어 id와 pw 둘다 틀렸을 때는 바로 응답이 되돌아오지만 둘 중 하나가 맞는 경우 로그인 정보를 검증하기 때문에 리소스를 더 많이 잡아먹게 된다.
    - jattack

유용한 데이터 대향 수집
    - 자동화된 데이터 대량 수집이 유용할 수 있는 경우
        - 온라인 소매 애플리케이션의 경우 다른 사용자의 주문번호를 알 수 있다면 다른 사용자의 주문 정보를 볼 수 있다.
        - 작업 관리 애플리케이션에서 사용자의 기본 계정 정보와 함께 사용자 권한을 알려주는 기능이 있는 경우 



questions
- 식별자 수집에서 서버응답을 확인하는 방법이 있는데 여기서 응답은 헤더내용인가?





토큰방식과 쿠키&세션 방식의 차이
-쿠키&세션
    - 사용자가 서버에 접속하면 쿠키와 세션, 세션id를 발행
    - 쿠키는 사용자 브라우저에 넘겨줘서 저장되고, 세션은 서버에 저장됨, 세션id는 쿠키에 저장됨
    - 세션id는 브라우저를 종료할 떄까지 인증상태 유효
    - 사용자가 서버에 요청을 보낼 때 html 해더를 통해 쿠키를 서버에 같이 보냄
    - 서버는 쿠키 안에 들어있는 세션id를 서버가 가지고 있는 세션과 비교해서 사용자를 구분

- 토큰 방식
    - 사용자가 서버에 접속하면 서버가 토큰을 발행
    - 토큰은 사용자 브라우저에 넘져줘서 저장되고, 서버는 사용자 정보를 저장하지 않음.
    - 사용자가 서버에 요청을 보낼때 브라우저는 토큰을 함께 보냄
    - 서버는 토큰을 확인하고 인가된 사용자인지 확인

둘의 차이점
- 쿠키&세션 방식은 서버가 사용자 정보를 가지고 있음
    - 동시 접속자가 많으면 용량이 부족할 수도 있음
- 토큰은 서버가 사용자 정보를 가지고 있지 않음
- 쿠키보다 토큰이 문자열이 더 길다.