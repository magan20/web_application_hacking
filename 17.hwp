17. 웹 서버 공격
- 다른 모든 웹애플리케이션과 마찬가지로 웹 애플리케이션도 웹서버, 운영체제, 네트워크 하부 조직 등에 많이 의존한다.
- 이 중에서 하나라도 공격을 당하게 된다면 거기에 의존하고 있던 애플리케이션도 완전히 장악될 수 있다.
- 웹서버 계층 취약점은 크게 두 분류로 나뉜다.
    - 웹 서버 설정상에 존재하는 결함
    - 웹서버 소프트웨어의 보안 취약점

웹 서버 설정 취약점
    - 수많은 서버들이 위험한 수준의 디폹트 옵션을 많이 사용해왔기 때문에 공격을 받을 가능성이 많다.
    디폴트 계정
        - 가끔 관리자 인터페이스는 인스톨 후 바꾸지 않고 그대로 사용하는 경우가 있다.
        - 상당수의 웹 서버는 과리자 인터페이스를 외부에서 접근할 수 있게 돼있다.
        - 이런 인터페이스는 웹 루트, 혹은 8080번이나 8443번 포트에서 작동하고 있는 경우도 있다.
        - 웹서버 관리자 인터페이스 외에도 스위치, 프린터, 무선 액세스 포인트에서도 이런 디폴트 계정이 있는 경우가 있다.

    디폴트 컨텐츠
        - 대부분의 웹서버는 공격자가 서버나 메인 애플리케이션을 공격할 수있을 수분의 디폴트 컨텐츠와 기능을 사용하고 있다.
            - 관리자를 위한 디버그와 테스트 기능
            - 일반적인 작업을 수행하기 위한 샘플 기능
            - 다른 사용자가 접근하지 못하게 한 강격한 기능이지만 실제로는 노출돼있는 것
            - 다른 곳에서 얻기 힘들거나 인스톨을 할 떄만 사용되는 등의 유용한 정보를 포함한 웹서버 메뉴얼
        
        디버그 기능
            - 관리자가 서버 진단을 위해 사용하는 기능들은 서버에 대한 유용한 정보와 구성, 실행 시간 상태, 서버에서 사용되는 애플리케이션에 대한 정보 등 공격할만한 가치가 있는 것들이다.
        
        샘플 기능
            - 상당수의 서버는 웹서버 기능과 API가 어떻게 사용되는지 테스트하기 위한 다양한 샘플 스크립트와 페이지를 포함하고 있다.
            - 이런 샘플은 원래 악의 없이 테스트를 하기 위해 만든 것일 뿐이었지만 의도하지 않은 대로 사용될 수 있다.
        
        강력한 기능
            - 어떤 웹서버 소프트웨어는 강력한 기능을 가지고 있는데, 이 기능은 원래 공적으로 사용하지 못하게 돼있지만 약간의 방법을 동원하면 다른 사용자가 사용할 수도 있다.
    
    디렉터리 목록
        - 웹서버가 디렉터리 요청을 받게 되면 다음과 같은 세가지 방법으로 응답한다.
            - 1. 디렉터리 안에 있는 index.html등의 디폴트 소스를 보낸다.
            - 2. 요청이 허가되지 않는다는 뜻을 나타내는 HTTP 상태 코드 403번 에러 메시지등을 보낸다.
            - 3. 디렉터리 안의 컨텐츠 목록을 나타낸다.
        
        - 대부분의 경우 디렉터리 목록을 보여준다고 해서 보안 문제와 직결되지는 않는다. 그럼에도 불구하고 목록을 노출시키는 것이 위험한 이유가 있다.
            - 대부분의 애플리케이션은 기능과 자료 접근 통제를 제대로 하고 있지 않기 때문에 공격자가 URL을 사용해서 중요한 아이템에 접근하는 것을 막지 못한다.
            - 로그, 백업 파일, 구 버전 스크립트 등의 파일과 디렉터리는 가끔 서버의 웹 루트에 위치해 있다.

        - 이 두 경우는 민감한 데이터에 대해 접근 제어를 제대로 못하기 때문에 발생하는 취약점이다.

    위험한 HTTP 메소드
        - HTTP 요청에는 post와 get 메소드 말고도 여러가지가 있고, 이런 메소드는 대부분 평소에는 잘 사용하지 않고 특별한 경우에만 사용된다.
        - 메소드 목록
            - PUT: 특정 위치에 첨부 파일을 업로드시킨다.
            - DELETE: 자료를 삭제한다.
            - COPY: 목적지 헤더에서 지정한 곳으로 자료를 이동한다.
            - MOVE: 목적지 헤더에서 지정한 곳으로 자료를 이동시킨다.
            - SEARCH: 자료의 디렉터리 경로를 검색한다.
            - PROPFIND: 자료에 대한 정보를 나타낸다.
            - TRACE: 서버로 전송된 요청을 응답 바디에 보여준다. TRACE를 세대로 설정하면 크로스사이트 스크립팅을 막을 수 있다.

    프록시로서 웹 서버
        - 웹서버는 가끔 HTTP 프록시 서버의 포워드나 역으로 인식되기도 한다.
        - 서버가 포워드 프록시로 인식돼있다면 서버의 설정이 어떻게 돼있느냐에 따라 다음과 같은 공격을 서버에 시도해볼 수 있다.
            - 공격자는 서버를 이용해 인터넷 상에 있는 제 3의 시스템을 공격할 수 있다. 이 공격은 취약점이 있는 프록시 서버에서 오는 악의적인 트래픽을 이용한다.
            - 공격자는 프록시를 사용해 회사의 내부 네트워크에 위차한 임의의 호스트에 연결해서 인터넷에서는 직접 접근하지 못하는 파일에 접근할 수 있다.
            - 공격자는 프록시를 사용해서 프록시 호스트에서 사용하는 서비스에 연결할 수 있다. 그 후애는 방화벽 제한을 없애고 인증을 얻을 수 있다.



new thing
- 포트 스캔: 운영 중인 서버에서 열려 있는 TCP/UDP 포트를 검색하는 것을 의미한다.
- PL/SQL 게이트웨이
- WebDAV: 웹 분산 저작 및 버전 관리, 하이퍼텍스트 전송 프로토콜(HTTP)의 확장으로, 월드 와이드 웹 서버에 저장된 문서와 파일을 편집하고 관리하는 사용자들 사이에 협업을 손쉽게 만들어 준다.
- 인터넷: 전세계적으로 연결된 컴퓨터 네트워크
- www: 컴퓨터를 이용해 사람들과 정보를 공유할 수 있는 거미줄처럼 얼기설기 엮인 공간
- 프록시: 프록시 서버는 클라이언트가 자신을 통해서 다른 네트워크 서비스에 간접적으로 접속할 수 있게 해 주는 컴퓨터 시스템이나 응용 프로그램을 가리킨다.
- 리버스 프록시: 컴퓨터 네트워크에서 클라이언트를 대신해서 한 대 이상의 서버로부터 자원을 추출하는 프록시 서버의 일종이다. 그런 다음 이러한 자원들이 마치 웹 서버 자치에서 기원한 것처럼 해당 클라이언트로 반환된다.
- 서브 도메인


question
- 서버가 운영체제라고 했는데 /를 사용해서 주소를 나타낸는 것은 서버 운영체제의 디렉터리 위치이고 각 디렉터리마다 페이지가 저장되어 있는 것인가? 페이지는 파일에 해당되는 것인가?
- 그럼 웹 애플리케이션은 운영체제를 네트워크 상에 연결시키고 여러 사람이 같이 이용하는 것인가? 리눅스처럼 여러 사용자가 사용할 수 있는거?
- www는 인터넷 상의 어떤 공간인 것인가? 그럼 이 www도 서버와 비슷한 개념인가? www상의 정보를 저장
- 찾아보니까 www말고도 ww1, ww2 같은 것도 있던데 이건 무엇인가?
