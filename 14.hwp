14. 정보 노출 공격 
- 애플리케이션의 정보에 대해서 알려면 애플리케이션의 콘텐츠와 기능과 애플리케이션에 사용된 기술과 어떤 외부적인 공격이 가능할지 전반적으로 알아야 한다.
- 애플리케이션에서 원하는 정보를 빼오기 위해서는 먼저 애플리케이션에 접근해서 비정상적인 작동이나 문제점을 탐지해야 한다.
    - 비정상적인 작동을 일으켜 사용자 인증도 알 수 있고, 에러 상태를 이용한 공격도 할 수 있고, 애플리케이션에 사용된 기술의 세부사항과 애플리케이션의 구성과 기능을 알 수 있다.

에러메시지 공격
    - 많은 웹 애플리케이션이 예상치 못한 이벤트가 일어나면 에러 메시지를 띄운다.
    - 이러한 에러메시지 중에는 상세 정보를 알려주는 메시지도 있다.
    - 대부분의 애플리케이션은 실제로 사용되기 전에 다양한 테스트 과정을 거치기 때문에 거의 모든 에러 조건이 등록되어 있다.
    스크립트 에러 메시지
        - 웹 스크립팅 언어가 해석되는 과정에서 에러 메시지가 발생할 때 애플리케이션은 에러에 관한 간단한 메시지만 노출한다
    
    스택 추적
        - 대부분의 웹 애플리케이션은 관리 실행 환경에서도 사용될 수 있다.
        - 자바, c#, 비주얼 베이직 닷넷 등의 언어에서 처리하기 어려운 에러가 발생하는 경우 스택 추적은 모두 브라우저에 나타난다.
        - 스택 추적은 구조화된 에러메시지로 메시지의 제일 처음은 실제 에러의 설명부터 시작한다.
        - 그 다음 줄은 에러가 발생했을 떄의 실행 호출 스택에 대한 설명이 나와있다.
    
    디버그 메시지 정보
        - 일부 애플리케이션은 많은 양의 디버그 정보를 갖고 있는 커스텀 에러 메시지를 생성하기도 한다.
        - 디버그 메시지에서 볼 수 있는 것
            - 사용자의 입력 값을 통해 조작될 수 있는 핵심 세션 변수의 값
            - 백엔트 설정을 위한 호스트명과 자격 증명 정보
            - 서버 안에 있는 파일과 디렉토리 이름
            - 중요한 의미가 포함된 의미 있는 세션 토큰
            - 클라이언트에게 전송된 데이터를 보고하기 위해 사용된 암호화 키
        - 실제 프로덕션 코드에서 기능에 대한 에러사항을 보고하면 애플리케이션의 보안에는 치명적인 결함을 주게 된다.
        - 에러 메시지 중 나중에 공격을 시도할 때 도움이 될만한 것이 있는지 살펴본 후 이를 이용해 조작된 입력 ㄱ밧을 만들어서 애플리케이션의 상태를 통제하고 정보도 조작할 수 있다.
    
    서버와 데이터베이스 메시지 
        - 에러 메시지 정보는 애플리케이션에서뿐만 아니라 데이터베이스, 메일 서버, SOAP서버와 같은 벡엔드 구성에서도 내보낸다.
        - 통제할 수 없는 에러가 생긴다면 애플리케이션은 일반적으로 http 500 상태코드 응답을 보내고, 응답 바디에는 에러에 대한 정보를 보낸다.
        - 가끔 백엔드 구성에서 생성한 에러 정보를 포함하기도 하는데 db 에러 메시지는 공격의 성공 ㄱ사능성을 더 높여줄 수 있는 정보를 가지고 있는 경우가 많다.
        - 서버의 응답에 포함하는 에러 정보는 브아우저의 화면에서 보여지지 않을 수도 있다. 많은 수의 에러 상태를 구분하는 효과적인 방법은 에러 메시지에 그대로 드러난 키워드를 찾는 방법이다.
    
    공개된 정보 이용
        - 웹 애플리케이션의 기술과 구성은 매우 다양하기 떄문에 한 번도 보지 못한 에러메시지를 볼 수도 있다.
        - 비정상적인 에러 메시지는 가끔 특정한 API의 실수로 나타나는 경우가 많다.
            - 메시지의 텍스트를 검색하면 API의 문서나 같은 문제를 다루었던 개발자 포럼을 통해 알 수 있다.
        - 대부분의 애플리케이션은 제 3자 컴포넌트를 이용해서 검색이나 장바구니, 사이트 피드백 기능을 사용한다.
        - 어떤 애플리케이션은 공개된 소스 코드를 사용하기도 한다.
            - 의심이 가는 에러 메시지에 나타난 특정표현은 그와 관련 있는 기능을 사용하는 소스 코드를 찾는데 도움이 될 것이다.
        - "unable to retreve" filetype:php 검색을 통해 여러 에러메시지를 확인할 수 있다.

    중요한 에러 메시지 엔지니어링
        - 어떤 경우에는 에러 메시지 안에 있는 중요한 정보를 뽑아 오는 등 에러 조건을 체계적으로 엔지니어링하는 게 가능할 수도 있다.
            - 애플리케이션이 데이터의 특정 아이템에 무효한 행동을 취할 때, 공격자가 원하는 정보가 에러 메시지에서 데이터 값이 노출되는 식으로 얻어진다면 이 방법으로 애플리케이션에서 임의의 데이터를 빼내는 데 사용될 수 있다.



new thing
- 스택 추적: 프로그램 실행 중 특정한 시점에서의 스택 프레임에 대한 리포트이다. 프로그램 실행 중 메모리는 보통 두 곳에 동적으로 할당되는데, 스택과 힙이 그것이다. 메모리는 이름에서 보이듯이 스택에서는 인접하여 할당되지만 힙은 그렇지 않다.
- 스택 프레임: 스택 영역, 함수의 호출과 괸계되는 지역 변수와 매개변수가 저장되는 영역, 함수의 호출과 함께 할당되며, 함수의 호출이 완료되면 소멸
- 호출 스택(콜 스택): 컴퓨터 프로그램에서 현재 실행중인 서브루틴에 대한 정보를 저장하는 스택 자료구조이다.실행스택, 제어스택, 런 타임 스택, 기계스택이라고도 한다.
- 제 3자 컴포넌트
- soap: http, https, smtp등을 통해 xml 기반의 메시지를 컴퓨터 네트워크 상에서 교환하는 프로토콜이다.
- odbc: 데이터베이스에 접근하기 위한 소프트웨어 표준 규격, 각 데이터베이스의 차이는 odbc 드라이버에 흡수되기 떄문에 사용자는 odbc에 정해진 순서에 따라서 프로그램을 쓰면 접속처의 데이터베이스가 어떠한 데이터베이스 관리 시스템에 관리되고 있는지  의식할 필요 없이 접근할 수 있다.



question
- 에러메시지는 어디에서 호출되는 것인가(에러메시지가 저장되는 장소)(db, 웹 애플리케이션 등)
- 애플리케이션은 테스트를 통해 에러조건을 등록한다고 하는데 이 에러 조건들과 에러메시지는 어디에 등록되어있나? 
- 프로그래밍 할 때 변수들의 메모리 주소값은 스택 프레임 안의 주소값인가?
- 커스텀 에러는 시스템에서 생성되는 에러가 아니라 개발자가 직접 만드는 에러인가? 예외처리느낌?
- 제 3자 컴포넌트가 무엇인가?
